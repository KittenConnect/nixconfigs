name: Nix Flake actions

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

on:
  pull_request:
  push:
  workflow_dispatch:

jobs:
  nix-init:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v30
      - uses: DeterminateSystems/magic-nix-cache-action@v2
      - id: set-matrix
        name: Generate Nix Matrix
        run: |
          set -Eeu
          matrix="$(nix eval --json -f ./ci/workflows.nix)"
          echo "matrix=$matrix" >> "$GITHUB_OUTPUT"
          # Building all Nix packages
          nix build -L -f ci/build-all-nix.nix _allPackages -o result-allNix


  nix-build:
    name: ${{ matrix.name }} (${{ matrix.system }})
    needs: nix-init
    runs-on: ${{ matrix.os }}
    strategy:
      matrix: ${{fromJSON(needs.nix-init.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v30
      - uses: DeterminateSystems/magic-nix-cache-action@v2
      - run: nix build -L -f '${{ matrix.file }}' '${{ matrix.attr }}'
